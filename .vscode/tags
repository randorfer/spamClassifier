!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AdaBoostClassifier	../highest_accuracy.py	/^from sklearn.ensemble import AdaBoostClassifier$/;"	kind:namespace	line:10
BernoulliNB	../sklearn_test.py	/^from sklearn.naive_bayes import GaussianNB, MultinomialNB, BernoulliNB$/;"	kind:namespace	line:4
DecisionTreeClassifier	../evaluate_sklearn_classifier.py	/^from sklearn.tree import DecisionTreeClassifier, export_graphviz$/;"	kind:namespace	line:6
DecisionTreeClassifier	../highest_accuracy.py	/^from sklearn.tree import DecisionTreeClassifier$/;"	kind:namespace	line:5
GaussianNB	../highest_accuracy.py	/^from sklearn.naive_bayes import GaussianNB, MultinomialNB$/;"	kind:namespace	line:7
GaussianNB	../sklearn_test.py	/^from sklearn.naive_bayes import GaussianNB, MultinomialNB, BernoulliNB$/;"	kind:namespace	line:4
GridSearchCV	../random_forest_sklearn.py	/^from sklearn.grid_search import GridSearchCV$/;"	kind:namespace	line:4
GridSearchCV	../sklearn_test.py	/^from sklearn.grid_search import GridSearchCV$/;"	kind:namespace	line:5
KNeighborsClassifier	../highest_accuracy.py	/^from sklearn.neighbors import KNeighborsClassifier$/;"	kind:namespace	line:8
METHOD	../sklearn_test.py	/^class METHOD:$/;"	kind:class	line:18
MultinomialNB	../highest_accuracy.py	/^from sklearn.naive_bayes import GaussianNB, MultinomialNB$/;"	kind:namespace	line:7
MultinomialNB	../sklearn_test.py	/^from sklearn.naive_bayes import GaussianNB, MultinomialNB, BernoulliNB$/;"	kind:namespace	line:4
RandomForestClassifier	../highest_accuracy.py	/^from sklearn.ensemble import RandomForestClassifier$/;"	kind:namespace	line:6
RandomForestClassifier	../random_forest_sklearn.py	/^from sklearn.ensemble import RandomForestClassifier$/;"	kind:namespace	line:2
RandomState	../load_data.py	/^from numpy.random import RandomState$/;"	kind:namespace	line:8
RandomizedSearchCV	../evaluate_sklearn_classifier.py	/^from sklearn.model_selection import RandomizedSearchCV$/;"	kind:namespace	line:10
SVC	../highest_accuracy.py	/^from sklearn.svm import SVC$/;"	kind:namespace	line:9
StandardScaler	../load_data.py	/^from sklearn.preprocessing import StandardScaler$/;"	kind:namespace	line:10
StringIO	../evaluate_sklearn_classifier.py	/^from sklearn.externals.six import StringIO$/;"	kind:namespace	line:8
StringIO	../random_forest_sklearn.py	/^from sklearn.externals.six import StringIO$/;"	kind:namespace	line:6
X_test	../random_forest_sklearn.py	/^    X_test = X_test[:, 0:48]$/;"	kind:variable	line:56
X_test	../sklearn_test.py	/^        X_test = binarize(X_test, 0.31)$/;"	kind:variable	line:88
X_test	../sklearn_test.py	/^    X_test = X_test[:, 0:48]$/;"	kind:variable	line:65
X_train	../random_forest_sklearn.py	/^    X_train = X_train[:, 0:48]$/;"	kind:variable	line:55
X_train	../sklearn_test.py	/^        X_train = binarize(X_train, 0.31)$/;"	kind:variable	line:87
X_train	../sklearn_test.py	/^    X_train = X_train[:, 0:48]$/;"	kind:variable	line:64
__labels__	../evaluate_sklearn_classifier.py	/^__labels__ = [$/;"	kind:variable	line:16
__noteable_features__	../highest_accuracy.py	/^__noteable_features__ = []$/;"	kind:variable	line:12
auc	../evaluate_sklearn_classifier.py	/^from sklearn.metrics import roc_curve, auc, confusion_matrix, precision_recall_fscore_support, classification_report$/;"	kind:namespace	line:9
auc	../random_forest_sklearn.py	/^from sklearn.metrics import roc_curve, auc$/;"	kind:namespace	line:7
auc	../sklearn_test.py	/^from sklearn.metrics import roc_curve, auc$/;"	kind:namespace	line:7
binarize	../sklearn_test.py	/^binarize = True$/;"	kind:variable	line:24
binarize	../sklearn_test.py	/^def binarize(X, thresh):$/;"	kind:function	line:51
classification_report	../evaluate_sklearn_classifier.py	/^from sklearn.metrics import roc_curve, auc, confusion_matrix, precision_recall_fscore_support, classification_report$/;"	kind:namespace	line:9
clf	../random_forest_sklearn.py	/^    clf = RandomForestClassifier(criterion="gini", max_features="log2", n_estimators=73)$/;"	kind:variable	line:58
clf	../sklearn_test.py	/^        clf = BernoulliNB(alpha=1.0, binarize=0.31) # binarize found via cross validation$/;"	kind:variable	line:82
clf	../sklearn_test.py	/^        clf = GaussianNB()$/;"	kind:variable	line:72
clf	../sklearn_test.py	/^        clf = MultinomialNB(alpha=1.0)$/;"	kind:variable	line:76
confusion_matrix	../evaluate_sklearn_classifier.py	/^from sklearn.metrics import roc_curve, auc, confusion_matrix, precision_recall_fscore_support, classification_report$/;"	kind:namespace	line:9
costcla	../highest_accuracy.py	/^import costcla.models$/;"	kind:namespace	line:11
csv	../load_data.py	/^import csv$/;"	kind:namespace	line:6
evaluate_classifier	../evaluate_sklearn_classifier.py	/^def evaluate_classifier(clf, number_of_top_features=5, fscore_beta=1.0):$/;"	kind:function	line:52
evaluate_classifier	../highest_accuracy.py	/^from evaluate_sklearn_classifier import evaluate_classifier$/;"	kind:namespace	line:4
evaluate_sklearn_classifier.py	../evaluate_sklearn_classifier.py	1;"	kind:file	line:1
export_graphviz	../evaluate_sklearn_classifier.py	/^from sklearn.tree import DecisionTreeClassifier, export_graphviz$/;"	kind:namespace	line:6
find_hyperparams	../random_forest_sklearn.py	/^def find_hyperparams(clf, X, y):$/;"	kind:function	line:21
find_hyperparams_bernoulli	../sklearn_test.py	/^def find_hyperparams_bernoulli(clf, X, y):$/;"	kind:function	line:26
highest_accuracy.py	../highest_accuracy.py	1;"	kind:file	line:1
iterations	../random_forest_sklearn.py	/^iterations = 50$/;"	kind:variable	line:18
iterations	../sklearn_test.py	/^iterations = 50$/;"	kind:variable	line:22
k	../random_forest_sklearn.py	/^k = 5$/;"	kind:variable	line:19
k	../sklearn_test.py	/^k = 5$/;"	kind:variable	line:23
load_data	../evaluate_sklearn_classifier.py	/^from load_data import load_data$/;"	kind:namespace	line:14
load_data	../load_data.py	/^def load_data($/;"	kind:function	line:12
load_data	../random_forest_sklearn.py	/^from load_data import load_data$/;"	kind:namespace	line:1
load_data	../sklearn_test.py	/^from load_data import load_data$/;"	kind:namespace	line:3
load_data.py	../load_data.py	1;"	kind:file	line:1
main	../highest_accuracy.py	/^def main(beta=1.0):$/;"	kind:function	line:13
matplotlib	../evaluate_sklearn_classifier.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:12
matplotlib	../random_forest_sklearn.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:5
matplotlib	../sklearn_test.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:6
method	../sklearn_test.py	/^method = METHOD.bernoulli$/;"	kind:variable	line:21
models	../highest_accuracy.py	/^import costcla.models$/;"	kind:namespace	line:11
np	../evaluate_sklearn_classifier.py	/^import numpy as np$/;"	kind:namespace	line:7
np	../load_data.py	/^import numpy as np$/;"	kind:namespace	line:7
np	../random_forest_sklearn.py	/^import numpy as np$/;"	kind:namespace	line:3
np	../sklearn_test.py	/^import numpy as np$/;"	kind:namespace	line:8
operator	../evaluate_sklearn_classifier.py	/^import operator$/;"	kind:namespace	line:4
operator	../random_forest_sklearn.py	/^import operator$/;"	kind:namespace	line:9
operator	../sklearn_test.py	/^import operator$/;"	kind:namespace	line:9
plt	../evaluate_sklearn_classifier.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:12
plt	../random_forest_sklearn.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:5
plt	../sklearn_test.py	/^import matplotlib.pyplot as plt$/;"	kind:namespace	line:6
precision_recall_fscore_support	../evaluate_sklearn_classifier.py	/^from sklearn.metrics import roc_curve, auc, confusion_matrix, precision_recall_fscore_support, classification_report$/;"	kind:namespace	line:9
pydot_ng	../evaluate_sklearn_classifier.py	/^import pydot_ng$/;"	kind:namespace	line:11
pydot_ng	../random_forest_sklearn.py	/^import pydot_ng$/;"	kind:namespace	line:8
random_forest_sklearn.py	../random_forest_sklearn.py	1;"	kind:file	line:1
roc_auc	../random_forest_sklearn.py	/^roc_auc = []$/;"	kind:variable	line:49
roc_auc	../sklearn_test.py	/^roc_auc = []$/;"	kind:variable	line:57
roc_curve	../evaluate_sklearn_classifier.py	/^from sklearn.metrics import roc_curve, auc, confusion_matrix, precision_recall_fscore_support, classification_report$/;"	kind:namespace	line:9
roc_curve	../random_forest_sklearn.py	/^from sklearn.metrics import roc_curve, auc$/;"	kind:namespace	line:7
roc_curve	../sklearn_test.py	/^from sklearn.metrics import roc_curve, auc$/;"	kind:namespace	line:7
scores	../random_forest_sklearn.py	/^scores = []$/;"	kind:variable	line:48
scores	../sklearn_test.py	/^scores = []$/;"	kind:variable	line:56
show_auc	../random_forest_sklearn.py	/^def show_auc(y_true, y_score):$/;"	kind:function	line:34
show_auc	../sklearn_test.py	/^def show_auc(y_true, y_score):$/;"	kind:function	line:34
sklearn_test.py	../sklearn_test.py	1;"	kind:file	line:1
top_k_features	../random_forest_sklearn.py	/^def top_k_features(k, weights):$/;"	kind:function	line:31
top_k_features	../sklearn_test.py	/^def top_k_features(k, weights):$/;"	kind:function	line:48
top_n_features	../evaluate_sklearn_classifier.py	/^def top_n_features(number, weights):$/;"	kind:function	line:47
train_test_split	../load_data.py	/^from sklearn.cross_validation import train_test_split$/;"	kind:namespace	line:9
tune	../evaluate_sklearn_classifier.py	/^def tune(clf, X_train, y_train):$/;"	kind:function	line:27
weights	../sklearn_test.py	/^        weights = clf.feature_log_prob_$/;"	kind:variable	line:99
weights	../sklearn_test.py	/^        weights = clf.theta_$/;"	kind:variable	line:97
weights	../sklearn_test.py	/^weights = []$/;"	kind:variable	line:58
word_labels	../random_forest_sklearn.py	/^word_labels = ["make", "address", "all", "3d", "our", "over", "remove", "internet",$/;"	kind:variable	line:11
word_labels	../sklearn_test.py	/^word_labels = ['address', 'all', '3d', 'our', 'over', 'remove', 'internet',$/;"	kind:variable	line:11
